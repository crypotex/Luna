<?xml version="1.0" encoding="UTF-8"?>
<project name="POS" default="build" basedir=".">
	
	<!-- Definitions of variables used during the rest of this script -->

		<property file="version.properties"/>
		<property name="build.dir" value="${basedir}/build"/>
		<property name="build.classes.dir" value="${build.dir}/classes"/>
		<property name="src.dir" value="${basedir}/src"/>
		<property name="build.jar.dir" value="${build.dir}/jar"/>
		<property name="conf.dir" value="${basedir}/etc"/>
		<property name="doc.dir" value="${build.dir}/doc"/>
	 	<property name="lib.dir" value="${basedir}/lib"/>
		<property name="test.reports.dir" value="${build.dir}/reports/"/>
		
		
		<!-- database variables -->
		<property name="data.dir" value="${basedir}/data"/>
		<property name="db.file" value="${data.dir}/POSdb"/>
		<property name="db.alias" value="POS"/>
		<property name="db.url"  value="jdbc:hsqldb:hsql://localhost/POS"/>
		<property name="lib.hibernate.dir" value="${lib.dir}/hibernate"/>
		
	 	<property name="main.class"  value="ee.ut.math.tvt.Luna.Intro"/>
	
		<!-- Definitions of classpath variants used for different tasks -->
	
		<path id="compile.classpath">
			<fileset dir="${lib.dir}"
				includes="**/*.jar"/>
			<fileset dir="${lib.hibernate.dir}">
				<include name="*.jar"/>
			</fileset>
		</path>

		<path id="run.classpath">
			<pathelement location="${build.classes.dir}"/>
			<!-- configuration -->
			<pathelement location="${conf.dir}"/>
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
	 		<fileset dir="${lib.hibernate.dir}">
		    	<include name="*.jar"/>
		    </fileset>
		</path>

		<!-- Definitions of runnable ant targets.
	         Run them from the command line by executing "ant [targetname]"  -->
		
		<target name="run" depends="build" description="Run the template application">
			<java classname="${main.class}" classpathref="run.classpath" fork="yes" />
		</target>

		<target name="build" depends="clean" description="Build the system">
			<mkdir dir="${build.dir}"/>
			<mkdir dir="${build.classes.dir}"/>
			<javac
	            srcdir="${src.dir}"
	            destdir="${build.classes.dir}"
	            debug="true"
	            debuglevel="lines,vars,source"
	            encoding="utf-8"
	            compiler="modern"
	            target="1.8"
	            source="1.8"
				includeantruntime="false">
				<classpath refid="run.classpath"/>
			</javac>

		</target>
		
		<!-- Create .jar file -->
	
		<target name="dist" depends="build" description="Create .jar file">
			<mkdir dir="${build.jar.dir}"/>
			
			<propertyfile file="version.properties">
				<entry key="build.revision.number" default="0" type="int" operation="+" />
			</propertyfile>
				
			<property file="version.properties"/>
						
			<propertyfile file="version.properties">
				<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
			</propertyfile>
			
			<propertyfile file="application.properties">
				<entry key="Software_version" value="${build.number}"/>
			</propertyfile>
			
			<jar destfile="${build.jar.dir}/Luna.jar" basedir="${build.classes.dir}">
				<fileset dir="${basedir}">
					<include name="*.properties"/>
					<include name="etc/log4j.properties"/>
				</fileset>
				<fileset dir="${basedir}/etc">
				       <include name="log4j.properties"/>                              
				</fileset>
				<manifest>
					<attribute name="Main-Class" value="${main.class}"/>
				</manifest>	
			</jar>
		</target>
	
	    <!-- Commits changes to github -->
	
		<target name="git_commit" description="Commit changes to Github">
			<input message="Commit message" addproperty="commit.message"/>
			
			<exec executable="git">
				<arg value="add"/>
				<arg value="-A"/>
			</exec>
			
			<exec executable="git">
				<arg value="commit"/>
				<arg value="-m ${commit.message}"/>
			</exec>
			
			<input message="Username:" addproperty="user"/>
			<input message="Password:" addproperty="pass"/>
			
			<exec executable="git">
				<arg value="push"/>
				<arg value="https://${user}:${pass}@github.com/crypotex/Luna.git"/>
			</exec>
		</target>
	    
		<target name="git_tag" description="Adds a tag">
			<input message="Tag name:" addproperty="tag.name"/>
			<input message="Tag comment:" addproperty="tag.comment"/>
			<input message="Username:" addproperty="user"/>
			<input message="Password:" addproperty="pass"/>
			
			<exec executable="git">
				<arg value="tag"/>
				<arg value="-a"/>
				<arg value="${tag.name}"/>
				<arg value="-m"/>
				<arg value="${tag.comment}"/>
			</exec>
			
			<exec executable="git">
				<arg value="push"/>
				<arg value="https://${user}:${pass}@github.com/crypotex/Luna.git"/>
				<arg value="--tags"/>
			</exec>
		</target>

		<!-- Run the built .jar file -->
	
		<target name="jrun" depends="dist" description="Run the built .jar file">
			<java fork="true" classname="${main.class}">
				<classpath>
					<path refid="compile.classpath"/>
					<path location="${build.jar.dir}/Luna.jar"/>
			       </classpath>
			  </java>
		</target>

		<!-- Runs the console -->
		<target name="runc" depends="build" description="Run the application (console)">
			<java classname="ee.ut.math.tvt.Luna.Intro" classpathref="run.classpath" fork="yes">
				<arg value="console" />
			</java>
		</target>

	
		<!-- database support-->
		<target name="dbmanager" description="Start the HSQLDB manager">
	        <java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes">
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	    <target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes">
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
		</target>

		
		<!-- Clean up build system results -->
	
		<target name="clean" description="Clean up build system results">
			<delete dir="${build.dir}"/>
		</target>
	
</project>
